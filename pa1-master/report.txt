Score: 90

heapMap not compiling

insert:
  insert ("Tam",50,30.55) Tip
  insert ("Ula",30,2000.0) (HeapNode ("Tam",50,30.55) Tip Tip)
  testIns pl h0
  insert p2 h1
  insert p2 h2
  testIns pl h2

Finished in 0.0014 seconds
6 examples, 0 failures

delete:
  delete h1
  delete h2
  testDel 5 h2
  testDel 4 h1

Finished in 0.0006 seconds
4 examples, 0 failures

peek:
  getPriority (peek h0)
  peek h1
  peek h2

Finished in 0.0005 seconds
3 examples, 0 failures

heap2InList:
  heap2InList h0
  heap2InList h1
  heap2InList h2 FAILED [1]

Failures:

  ../pa1d_test.hs:28: 
  1) heap2InList: heap2InList h2
       expected: [("Camille",5,40.0),("Bette",18,45.0),("Don",6,45.0),("Al",20,50.0),("Finn",5,99.99),("Ephram",10,60.0)]
        but got: [("Bette",18,45.0),("Camille",5,40.0),("Don",6,45.0),("Al",20,50.0),("Ephram",10,60.0),("Finn",5,99.99)]

Randomized with seed 1431941529

Finished in 0.0029 seconds
3 examples, 1 failure

heap2PreList:
  heap2PreList h0
  heap2PreList h1
  heap2PreList h2

Finished in 0.0006 seconds
3 examples, 0 failures

heap2Names:
  heap2Names h0
  heap2Names h1
  heap2Names h2

Finished in 0.0005 seconds
3 examples, 0 failures

isEmpty:
  isEmpty h0
  isEmpty h1
  isEmpty h2

Finished in 0.0026 seconds
3 examples, 0 failures

height:
  height h0
  height h1
  height h2

Finished in 0.0005 seconds
3 examples, 0 failures

size:
  size h0
  size h1
  size h2

Finished in 0.0005 seconds
3 examples, 0 failures


-----------WARNING AND ERROR OUTPUTS BELOW-----------


../pa1j_test.hs:22:7: error:
    Variable not in scope:
      heapMap :: (Integer -> Integer) -> Heap a0 -> Heap a1

../pa1j_test.hs:25:7: error:
    Variable not in scope:
      heapMap
        :: (Integer -> Integer)
           -> Heap ([Char], Integer, Double) -> Heap ([Char], Integer, Double)

../pa1j_test.hs:28:7: error:
    Variable not in scope:
      heapMap
        :: (Integer -> Integer)
           -> Heap ([Char], Integer, Double) -> Heap ([Char], Integer, Double)

../pa1j_test.hs:31:7: error:
    Variable not in scope:
      heapMap
        :: (Double -> Double)
           -> Heap ([Char], Integer, Double) -> Heap ([Char], Integer, Double)
